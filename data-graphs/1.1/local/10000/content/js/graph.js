/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 70911.0, "series": [{"data": [[0.0, 5.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 7.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 8.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 9.0], [3.9, 9.0], [4.0, 9.0], [4.1, 10.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 10.0], [5.6, 10.0], [5.7, 10.0], [5.8, 10.0], [5.9, 10.0], [6.0, 10.0], [6.1, 10.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 10.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 10.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 11.0], [9.3, 11.0], [9.4, 11.0], [9.5, 11.0], [9.6, 11.0], [9.7, 11.0], [9.8, 11.0], [9.9, 11.0], [10.0, 11.0], [10.1, 11.0], [10.2, 11.0], [10.3, 11.0], [10.4, 11.0], [10.5, 11.0], [10.6, 11.0], [10.7, 11.0], [10.8, 11.0], [10.9, 11.0], [11.0, 11.0], [11.1, 11.0], [11.2, 11.0], [11.3, 11.0], [11.4, 11.0], [11.5, 11.0], [11.6, 11.0], [11.7, 11.0], [11.8, 11.0], [11.9, 11.0], [12.0, 11.0], [12.1, 11.0], [12.2, 11.0], [12.3, 11.0], [12.4, 11.0], [12.5, 11.0], [12.6, 11.0], [12.7, 11.0], [12.8, 11.0], [12.9, 11.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 12.0], [16.5, 12.0], [16.6, 12.0], [16.7, 12.0], [16.8, 12.0], [16.9, 12.0], [17.0, 12.0], [17.1, 12.0], [17.2, 12.0], [17.3, 12.0], [17.4, 12.0], [17.5, 12.0], [17.6, 12.0], [17.7, 12.0], [17.8, 12.0], [17.9, 12.0], [18.0, 12.0], [18.1, 12.0], [18.2, 12.0], [18.3, 12.0], [18.4, 12.0], [18.5, 12.0], [18.6, 12.0], [18.7, 12.0], [18.8, 12.0], [18.9, 12.0], [19.0, 13.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 13.0], [19.5, 13.0], [19.6, 13.0], [19.7, 13.0], [19.8, 13.0], [19.9, 13.0], [20.0, 13.0], [20.1, 13.0], [20.2, 13.0], [20.3, 13.0], [20.4, 13.0], [20.5, 13.0], [20.6, 13.0], [20.7, 13.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 14.0], [24.4, 14.0], [24.5, 14.0], [24.6, 14.0], [24.7, 14.0], [24.8, 14.0], [24.9, 14.0], [25.0, 14.0], [25.1, 14.0], [25.2, 14.0], [25.3, 14.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 14.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 14.0], [26.3, 14.0], [26.4, 14.0], [26.5, 14.0], [26.6, 14.0], [26.7, 14.0], [26.8, 14.0], [26.9, 14.0], [27.0, 14.0], [27.1, 14.0], [27.2, 14.0], [27.3, 14.0], [27.4, 14.0], [27.5, 14.0], [27.6, 14.0], [27.7, 14.0], [27.8, 14.0], [27.9, 14.0], [28.0, 14.0], [28.1, 14.0], [28.2, 14.0], [28.3, 15.0], [28.4, 15.0], [28.5, 15.0], [28.6, 15.0], [28.7, 15.0], [28.8, 15.0], [28.9, 15.0], [29.0, 15.0], [29.1, 15.0], [29.2, 15.0], [29.3, 15.0], [29.4, 15.0], [29.5, 15.0], [29.6, 15.0], [29.7, 15.0], [29.8, 15.0], [29.9, 15.0], [30.0, 15.0], [30.1, 15.0], [30.2, 15.0], [30.3, 15.0], [30.4, 15.0], [30.5, 15.0], [30.6, 15.0], [30.7, 15.0], [30.8, 15.0], [30.9, 16.0], [31.0, 16.0], [31.1, 16.0], [31.2, 16.0], [31.3, 16.0], [31.4, 16.0], [31.5, 16.0], [31.6, 16.0], [31.7, 16.0], [31.8, 16.0], [31.9, 16.0], [32.0, 16.0], [32.1, 16.0], [32.2, 16.0], [32.3, 16.0], [32.4, 16.0], [32.5, 17.0], [32.6, 17.0], [32.7, 17.0], [32.8, 17.0], [32.9, 17.0], [33.0, 17.0], [33.1, 17.0], [33.2, 17.0], [33.3, 17.0], [33.4, 18.0], [33.5, 18.0], [33.6, 18.0], [33.7, 18.0], [33.8, 19.0], [33.9, 19.0], [34.0, 19.0], [34.1, 19.0], [34.2, 20.0], [34.3, 20.0], [34.4, 20.0], [34.5, 21.0], [34.6, 22.0], [34.7, 24.0], [34.8, 28.0], [34.9, 32.0], [35.0, 38.0], [35.1, 42.0], [35.2, 44.0], [35.3, 45.0], [35.4, 46.0], [35.5, 48.0], [35.6, 58.0], [35.7, 61.0], [35.8, 63.0], [35.9, 65.0], [36.0, 73.0], [36.1, 74.0], [36.2, 75.0], [36.3, 76.0], [36.4, 79.0], [36.5, 81.0], [36.6, 206.0], [36.7, 208.0], [36.8, 209.0], [36.9, 210.0], [37.0, 210.0], [37.1, 211.0], [37.2, 211.0], [37.3, 211.0], [37.4, 211.0], [37.5, 211.0], [37.6, 211.0], [37.7, 212.0], [37.8, 212.0], [37.9, 212.0], [38.0, 212.0], [38.1, 212.0], [38.2, 212.0], [38.3, 212.0], [38.4, 212.0], [38.5, 213.0], [38.6, 213.0], [38.7, 213.0], [38.8, 213.0], [38.9, 213.0], [39.0, 213.0], [39.1, 213.0], [39.2, 213.0], [39.3, 214.0], [39.4, 214.0], [39.5, 214.0], [39.6, 214.0], [39.7, 214.0], [39.8, 214.0], [39.9, 214.0], [40.0, 214.0], [40.1, 214.0], [40.2, 214.0], [40.3, 215.0], [40.4, 215.0], [40.5, 215.0], [40.6, 215.0], [40.7, 215.0], [40.8, 215.0], [40.9, 215.0], [41.0, 215.0], [41.1, 215.0], [41.2, 215.0], [41.3, 216.0], [41.4, 216.0], [41.5, 216.0], [41.6, 216.0], [41.7, 216.0], [41.8, 216.0], [41.9, 216.0], [42.0, 216.0], [42.1, 216.0], [42.2, 217.0], [42.3, 217.0], [42.4, 217.0], [42.5, 217.0], [42.6, 217.0], [42.7, 217.0], [42.8, 217.0], [42.9, 217.0], [43.0, 217.0], [43.1, 217.0], [43.2, 218.0], [43.3, 218.0], [43.4, 218.0], [43.5, 218.0], [43.6, 218.0], [43.7, 218.0], [43.8, 218.0], [43.9, 218.0], [44.0, 219.0], [44.1, 219.0], [44.2, 219.0], [44.3, 219.0], [44.4, 219.0], [44.5, 219.0], [44.6, 219.0], [44.7, 219.0], [44.8, 220.0], [44.9, 220.0], [45.0, 220.0], [45.1, 220.0], [45.2, 220.0], [45.3, 220.0], [45.4, 220.0], [45.5, 221.0], [45.6, 221.0], [45.7, 221.0], [45.8, 221.0], [45.9, 221.0], [46.0, 221.0], [46.1, 222.0], [46.2, 222.0], [46.3, 222.0], [46.4, 223.0], [46.5, 223.0], [46.6, 223.0], [46.7, 224.0], [46.8, 224.0], [46.9, 224.0], [47.0, 225.0], [47.1, 225.0], [47.2, 226.0], [47.3, 227.0], [47.4, 228.0], [47.5, 233.0], [47.6, 244.0], [47.7, 249.0], [47.8, 259.0], [47.9, 269.0], [48.0, 281.0], [48.1, 287.0], [48.2, 412.0], [48.3, 413.0], [48.4, 414.0], [48.5, 415.0], [48.6, 415.0], [48.7, 416.0], [48.8, 416.0], [48.9, 417.0], [49.0, 417.0], [49.1, 417.0], [49.2, 418.0], [49.3, 418.0], [49.4, 418.0], [49.5, 418.0], [49.6, 418.0], [49.7, 418.0], [49.8, 418.0], [49.9, 419.0], [50.0, 419.0], [50.1, 419.0], [50.2, 419.0], [50.3, 420.0], [50.4, 420.0], [50.5, 420.0], [50.6, 421.0], [50.7, 421.0], [50.8, 421.0], [50.9, 421.0], [51.0, 421.0], [51.1, 422.0], [51.2, 422.0], [51.3, 422.0], [51.4, 423.0], [51.5, 423.0], [51.6, 424.0], [51.7, 424.0], [51.8, 425.0], [51.9, 425.0], [52.0, 425.0], [52.1, 426.0], [52.2, 426.0], [52.3, 426.0], [52.4, 427.0], [52.5, 427.0], [52.6, 427.0], [52.7, 428.0], [52.8, 428.0], [52.9, 429.0], [53.0, 430.0], [53.1, 430.0], [53.2, 431.0], [53.3, 431.0], [53.4, 432.0], [53.5, 433.0], [53.6, 434.0], [53.7, 436.0], [53.8, 437.0], [53.9, 439.0], [54.0, 440.0], [54.1, 442.0], [54.2, 448.0], [54.3, 455.0], [54.4, 484.0], [54.5, 511.0], [54.6, 536.0], [54.7, 820.0], [54.8, 822.0], [54.9, 823.0], [55.0, 825.0], [55.1, 826.0], [55.2, 827.0], [55.3, 829.0], [55.4, 831.0], [55.5, 833.0], [55.6, 835.0], [55.7, 836.0], [55.8, 837.0], [55.9, 839.0], [56.0, 840.0], [56.1, 841.0], [56.2, 842.0], [56.3, 843.0], [56.4, 843.0], [56.5, 844.0], [56.6, 845.0], [56.7, 846.0], [56.8, 848.0], [56.9, 850.0], [57.0, 851.0], [57.1, 853.0], [57.2, 854.0], [57.3, 857.0], [57.4, 860.0], [57.5, 863.0], [57.6, 868.0], [57.7, 873.0], [57.8, 881.0], [57.9, 906.0], [58.0, 1011.0], [58.1, 1014.0], [58.2, 1018.0], [58.3, 1020.0], [58.4, 1022.0], [58.5, 1026.0], [58.6, 1030.0], [58.7, 1032.0], [58.8, 1033.0], [58.9, 1036.0], [59.0, 1039.0], [59.1, 1042.0], [59.2, 1046.0], [59.3, 1113.0], [59.4, 1220.0], [59.5, 1226.0], [59.6, 1228.0], [59.7, 1231.0], [59.8, 1235.0], [59.9, 1236.0], [60.0, 1238.0], [60.1, 1240.0], [60.2, 1243.0], [60.3, 1247.0], [60.4, 1249.0], [60.5, 1252.0], [60.6, 1431.0], [60.7, 1443.0], [60.8, 1449.0], [60.9, 1456.0], [61.0, 1651.0], [61.1, 1656.0], [61.2, 1659.0], [61.3, 1662.0], [61.4, 1664.0], [61.5, 1666.0], [61.6, 1669.0], [61.7, 1670.0], [61.8, 1671.0], [61.9, 1673.0], [62.0, 1674.0], [62.1, 1676.0], [62.2, 1676.0], [62.3, 1678.0], [62.4, 1679.0], [62.5, 1681.0], [62.6, 1682.0], [62.7, 1683.0], [62.8, 1685.0], [62.9, 1687.0], [63.0, 1692.0], [63.1, 1695.0], [63.2, 1701.0], [63.3, 1732.0], [63.4, 1743.0], [63.5, 1842.0], [63.6, 1853.0], [63.7, 1859.0], [63.8, 1867.0], [63.9, 1887.0], [64.0, 2687.0], [64.1, 2696.0], [64.2, 2723.0], [64.3, 3027.0], [64.4, 3029.0], [64.5, 3030.0], [64.6, 3031.0], [64.7, 3032.0], [64.8, 3033.0], [64.9, 3035.0], [65.0, 3035.0], [65.1, 3036.0], [65.2, 3037.0], [65.3, 3038.0], [65.4, 3039.0], [65.5, 3040.0], [65.6, 3041.0], [65.7, 3041.0], [65.8, 3042.0], [65.9, 3043.0], [66.0, 3043.0], [66.1, 3044.0], [66.2, 3045.0], [66.3, 3045.0], [66.4, 3045.0], [66.5, 3046.0], [66.6, 3046.0], [66.7, 3047.0], [66.8, 3048.0], [66.9, 3048.0], [67.0, 3049.0], [67.1, 3049.0], [67.2, 3050.0], [67.3, 3050.0], [67.4, 3051.0], [67.5, 3051.0], [67.6, 3052.0], [67.7, 3052.0], [67.8, 3053.0], [67.9, 3053.0], [68.0, 3054.0], [68.1, 3054.0], [68.2, 3055.0], [68.3, 3055.0], [68.4, 3056.0], [68.5, 3056.0], [68.6, 3056.0], [68.7, 3057.0], [68.8, 3058.0], [68.9, 3058.0], [69.0, 3059.0], [69.1, 3060.0], [69.2, 3061.0], [69.3, 3062.0], [69.4, 3064.0], [69.5, 3069.0], [69.6, 3230.0], [69.7, 3232.0], [69.8, 3234.0], [69.9, 3235.0], [70.0, 3236.0], [70.1, 3237.0], [70.2, 3238.0], [70.3, 3239.0], [70.4, 3240.0], [70.5, 3241.0], [70.6, 3242.0], [70.7, 3243.0], [70.8, 3244.0], [70.9, 3245.0], [71.0, 3246.0], [71.1, 3246.0], [71.2, 3247.0], [71.3, 3248.0], [71.4, 3249.0], [71.5, 3250.0], [71.6, 3250.0], [71.7, 3252.0], [71.8, 3252.0], [71.9, 3253.0], [72.0, 3254.0], [72.1, 3254.0], [72.2, 3254.0], [72.3, 3255.0], [72.4, 3256.0], [72.5, 3256.0], [72.6, 3257.0], [72.7, 3257.0], [72.8, 3258.0], [72.9, 3258.0], [73.0, 3259.0], [73.1, 3260.0], [73.2, 3261.0], [73.3, 3262.0], [73.4, 3263.0], [73.5, 3265.0], [73.6, 3267.0], [73.7, 3269.0], [73.8, 3274.0], [73.9, 3284.0], [74.0, 3286.0], [74.1, 3289.0], [74.2, 3290.0], [74.3, 3293.0], [74.4, 3294.0], [74.5, 3296.0], [74.6, 3297.0], [74.7, 3299.0], [74.8, 3300.0], [74.9, 3304.0], [75.0, 3308.0], [75.1, 3310.0], [75.2, 3312.0], [75.3, 3314.0], [75.4, 3318.0], [75.5, 3324.0], [75.6, 3334.0], [75.7, 3338.0], [75.8, 3342.0], [75.9, 3344.0], [76.0, 3347.0], [76.1, 3349.0], [76.2, 3351.0], [76.3, 3355.0], [76.4, 3358.0], [76.5, 3361.0], [76.6, 3370.0], [76.7, 3428.0], [76.8, 3436.0], [76.9, 3439.0], [77.0, 3452.0], [77.1, 3462.0], [77.2, 3471.0], [77.3, 3478.0], [77.4, 3484.0], [77.5, 3494.0], [77.6, 3510.0], [77.7, 3554.0], [77.8, 3838.0], [77.9, 3861.0], [78.0, 3870.0], [78.1, 3874.0], [78.2, 3880.0], [78.3, 3885.0], [78.4, 3895.0], [78.5, 3901.0], [78.6, 3915.0], [78.7, 3981.0], [78.8, 4361.0], [78.9, 4709.0], [79.0, 4714.0], [79.1, 4771.0], [79.2, 4783.0], [79.3, 6461.0], [79.4, 6479.0], [79.5, 6528.0], [79.6, 6538.0], [79.7, 6560.0], [79.8, 6573.0], [79.9, 6594.0], [80.0, 6625.0], [80.1, 6638.0], [80.2, 6650.0], [80.3, 6667.0], [80.4, 6672.0], [80.5, 6689.0], [80.6, 6700.0], [80.7, 6716.0], [80.8, 6758.0], [80.9, 6774.0], [81.0, 6823.0], [81.1, 6843.0], [81.2, 6884.0], [81.3, 7005.0], [81.4, 7080.0], [81.5, 7089.0], [81.6, 7126.0], [81.7, 7130.0], [81.8, 7139.0], [81.9, 7156.0], [82.0, 7164.0], [82.1, 7187.0], [82.2, 7273.0], [82.3, 7280.0], [82.4, 7287.0], [82.5, 7290.0], [82.6, 7305.0], [82.7, 7341.0], [82.8, 7350.0], [82.9, 7362.0], [83.0, 7381.0], [83.1, 7393.0], [83.2, 7437.0], [83.3, 7458.0], [83.4, 7479.0], [83.5, 7492.0], [83.6, 7508.0], [83.7, 7521.0], [83.8, 7545.0], [83.9, 7557.0], [84.0, 7560.0], [84.1, 7566.0], [84.2, 7574.0], [84.3, 7587.0], [84.4, 7600.0], [84.5, 7646.0], [84.6, 7660.0], [84.7, 7684.0], [84.8, 7727.0], [84.9, 7954.0], [85.0, 8029.0], [85.1, 8112.0], [85.2, 8121.0], [85.3, 8146.0], [85.4, 8861.0], [85.5, 8906.0], [85.6, 8963.0], [85.7, 9029.0], [85.8, 10671.0], [85.9, 10681.0], [86.0, 13224.0], [86.1, 13277.0], [86.2, 13300.0], [86.3, 13330.0], [86.4, 13376.0], [86.5, 13391.0], [86.6, 13410.0], [86.7, 13426.0], [86.8, 13437.0], [86.9, 13476.0], [87.0, 13491.0], [87.1, 13517.0], [87.2, 13527.0], [87.3, 13792.0], [87.4, 14046.0], [87.5, 14128.0], [87.6, 14434.0], [87.7, 15342.0], [87.8, 15369.0], [87.9, 15381.0], [88.0, 15392.0], [88.1, 15415.0], [88.2, 15432.0], [88.3, 15447.0], [88.4, 15450.0], [88.5, 15464.0], [88.6, 15473.0], [88.7, 15480.0], [88.8, 15486.0], [88.9, 15490.0], [89.0, 15493.0], [89.1, 15497.0], [89.2, 15499.0], [89.3, 15502.0], [89.4, 15506.0], [89.5, 15508.0], [89.6, 15511.0], [89.7, 15517.0], [89.8, 15527.0], [89.9, 15533.0], [90.0, 15539.0], [90.1, 15544.0], [90.2, 15554.0], [90.3, 15570.0], [90.4, 15575.0], [90.5, 15589.0], [90.6, 15603.0], [90.7, 15625.0], [90.8, 15642.0], [90.9, 15680.0], [91.0, 15694.0], [91.1, 15713.0], [91.2, 15743.0], [91.3, 15760.0], [91.4, 15774.0], [91.5, 15789.0], [91.6, 15801.0], [91.7, 15822.0], [91.8, 15835.0], [91.9, 15854.0], [92.0, 15864.0], [92.1, 15886.0], [92.2, 15897.0], [92.3, 15912.0], [92.4, 15925.0], [92.5, 16117.0], [92.6, 16129.0], [92.7, 16141.0], [92.8, 16146.0], [92.9, 16160.0], [93.0, 16171.0], [93.1, 16186.0], [93.2, 16211.0], [93.3, 16263.0], [93.4, 16326.0], [93.5, 17001.0], [93.6, 17047.0], [93.7, 17092.0], [93.8, 17116.0], [93.9, 17159.0], [94.0, 17193.0], [94.1, 17209.0], [94.2, 17224.0], [94.3, 18685.0], [94.4, 18711.0], [94.5, 18728.0], [94.6, 18743.0], [94.7, 18764.0], [94.8, 18773.0], [94.9, 18824.0], [95.0, 18855.0], [95.1, 20996.0], [95.2, 21077.0], [95.3, 22201.0], [95.4, 22241.0], [95.5, 22285.0], [95.6, 22306.0], [95.7, 22366.0], [95.8, 26292.0], [95.9, 26320.0], [96.0, 26348.0], [96.1, 26378.0], [96.2, 26409.0], [96.3, 26428.0], [96.4, 26632.0], [96.5, 26705.0], [96.6, 26763.0], [96.7, 27439.0], [96.8, 27754.0], [96.9, 29088.0], [97.0, 29109.0], [97.1, 29168.0], [97.2, 29306.0], [97.3, 31405.0], [97.4, 31486.0], [97.5, 31514.0], [97.6, 31555.0], [97.7, 31716.0], [97.8, 31784.0], [97.9, 31808.0], [98.0, 31842.0], [98.1, 31955.0], [98.2, 32042.0], [98.3, 32301.0], [98.4, 32365.0], [98.5, 33111.0], [98.6, 33129.0], [98.7, 34529.0], [98.8, 34640.0], [98.9, 34798.0], [99.0, 34858.0], [99.1, 42783.0], [99.2, 42812.0], [99.3, 42839.0], [99.4, 52552.0], [99.5, 52593.0], [99.6, 54922.0], [99.7, 55385.0], [99.8, 70570.0], [99.9, 70846.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3463.0, "series": [{"data": [[0.0, 3463.0], [100.0, 7.0], [33100.0, 16.0], [33300.0, 3.0], [34700.0, 7.0], [34500.0, 5.0], [34900.0, 1.0], [42700.0, 12.0], [42900.0, 1.0], [200.0, 1091.0], [52500.0, 14.0], [52700.0, 2.0], [54900.0, 5.0], [54300.0, 4.0], [54700.0, 1.0], [55300.0, 5.0], [61700.0, 4.0], [70600.0, 1.0], [300.0, 7.0], [400.0, 596.0], [500.0, 18.0], [800.0, 307.0], [900.0, 10.0], [1000.0, 122.0], [1100.0, 2.0], [1200.0, 120.0], [1400.0, 39.0], [1600.0, 208.0], [1700.0, 31.0], [1800.0, 40.0], [1900.0, 3.0], [2000.0, 1.0], [2600.0, 14.0], [2700.0, 12.0], [2900.0, 1.0], [3000.0, 503.0], [3100.0, 2.0], [3300.0, 179.0], [3200.0, 489.0], [3400.0, 90.0], [3500.0, 14.0], [3600.0, 6.0], [3800.0, 65.0], [3900.0, 26.0], [4300.0, 12.0], [4400.0, 2.0], [70900.0, 2.0], [70500.0, 1.0], [4700.0, 35.0], [6300.0, 1.0], [6600.0, 65.0], [6500.0, 48.0], [6400.0, 13.0], [6700.0, 32.0], [6800.0, 26.0], [6900.0, 5.0], [7000.0, 27.0], [7100.0, 54.0], [7400.0, 40.0], [7300.0, 51.0], [7200.0, 46.0], [7600.0, 34.0], [7500.0, 79.0], [7700.0, 10.0], [7800.0, 1.0], [7900.0, 10.0], [8100.0, 26.0], [8000.0, 10.0], [8900.0, 16.0], [9000.0, 5.0], [8800.0, 14.0], [9900.0, 1.0], [10700.0, 2.0], [10500.0, 3.0], [10600.0, 16.0], [13200.0, 21.0], [13300.0, 31.0], [13100.0, 2.0], [13400.0, 48.0], [13500.0, 24.0], [13700.0, 3.0], [13800.0, 3.0], [14300.0, 3.0], [13900.0, 1.0], [14000.0, 13.0], [14100.0, 6.0], [14400.0, 2.0], [14800.0, 1.0], [15300.0, 39.0], [15400.0, 111.0], [15500.0, 129.0], [15600.0, 44.0], [15700.0, 54.0], [15800.0, 59.0], [15900.0, 18.0], [16100.0, 72.0], [16000.0, 2.0], [16200.0, 17.0], [16300.0, 8.0], [17100.0, 34.0], [17200.0, 14.0], [17000.0, 20.0], [16900.0, 4.0], [18600.0, 15.0], [18700.0, 45.0], [18800.0, 21.0], [18900.0, 2.0], [21000.0, 15.0], [21100.0, 2.0], [20900.0, 2.0], [22200.0, 26.0], [22300.0, 17.0], [22100.0, 1.0], [26300.0, 32.0], [26400.0, 20.0], [26500.0, 2.0], [26600.0, 10.0], [26200.0, 7.0], [27300.0, 4.0], [26700.0, 11.0], [27400.0, 5.0], [27600.0, 1.0], [27700.0, 10.0], [29000.0, 15.0], [29200.0, 7.0], [29300.0, 4.0], [29100.0, 12.0], [31400.0, 18.0], [31300.0, 3.0], [31500.0, 16.0], [31700.0, 12.0], [31600.0, 6.0], [31800.0, 25.0], [31900.0, 10.0], [32000.0, 11.0], [32400.0, 6.0], [32300.0, 13.0], [34800.0, 10.0], [34600.0, 8.0], [42800.0, 17.0], [43000.0, 1.0], [52400.0, 2.0], [52600.0, 1.0], [55000.0, 2.0], [55400.0, 2.0], [61600.0, 1.0], [70800.0, 15.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 70900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 618.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5164.0, "series": [{"data": [[0.0, 5164.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 618.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3700.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 704.0700636942685, "minX": 1.60925364E12, "maxY": 2518.4883693188654, "series": [{"data": [[1.6092537E12, 704.0700636942685], [1.60925364E12, 2518.4883693188654]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6092537E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 23.0, "maxY": 70838.0, "series": [{"data": [[23.0, 14.666666666666666], [26.0, 15.0], [27.0, 16.0], [29.0, 20.0], [30.0, 22.0], [36.0, 26.0], [38.0, 28.0], [39.0, 27.0], [41.0, 33.0], [40.0, 33.5], [43.0, 29.5], [42.0, 23.0], [44.0, 30.0], [47.0, 18.0], [50.0, 11.0], [54.0, 8.0], [59.0, 10.0], [67.0, 11.666666666666666], [69.0, 13.0], [71.0, 15.0], [70.0, 16.0], [73.0, 17.5], [72.0, 14.0], [75.0, 18.0], [76.0, 17.5], [78.0, 19.333333333333332], [77.0, 24.0], [79.0, 18.0], [83.0, 11.0], [86.0, 12.0], [102.0, 16.333333333333332], [109.0, 20.0], [115.0, 20.5], [128.0, 18.666666666666668], [140.0, 21.5], [145.0, 20.0], [154.0, 22.5], [155.0, 47249.0], [163.0, 53162.0], [164.0, 19.5], [166.0, 70760.66666666667], [160.0, 70813.0], [170.0, 56680.4], [175.0, 30888.5], [172.0, 70838.0], [176.0, 20.0], [182.0, 16.833333333333332], [180.0, 17.2], [181.0, 18.2], [179.0, 12252.777777777777], [178.0, 16.0], [177.0, 20582.166666666664], [183.0, 31295.14285714286], [184.0, 16.1], [185.0, 18242.5], [187.0, 20.0], [188.0, 55108.333333333336], [195.0, 18.0], [199.0, 26298.666666666668], [196.0, 55094.333333333336], [193.0, 55090.8], [206.0, 52526.666666666664], [203.0, 52688.0], [201.0, 52649.5], [212.0, 14.666666666666666], [215.0, 35050.666666666664], [213.0, 52535.5], [209.0, 52581.666666666664], [220.0, 20.0], [221.0, 42764.4], [216.0, 42812.0], [227.0, 42804.333333333336], [224.0, 42891.0], [239.0, 20.5], [237.0, 16.0], [238.0, 42791.25], [234.0, 42779.0], [232.0, 42839.8], [247.0, 34533.0], [246.0, 42803.0], [245.0, 42798.666666666664], [242.0, 42799.5], [253.0, 19.0], [252.0, 34614.666666666664], [249.0, 34638.5], [258.0, 19.0], [271.0, 19892.14285714286], [267.0, 34851.25], [263.0, 34796.666666666664], [260.0, 34809.0], [259.0, 34647.5], [257.0, 34577.8], [283.0, 17.333333333333332], [285.0, 33128.75], [281.0, 33131.333333333336], [278.0, 33142.0], [277.0, 34796.333333333336], [274.0, 34827.666666666664], [293.0, 119.5], [298.0, 13029.0], [295.0, 24988.5], [302.0, 32318.0], [301.0, 32305.666666666668], [296.0, 33114.0], [292.0, 33121.333333333336], [289.0, 33167.25], [306.0, 157.0], [308.0, 15.666666666666666], [312.0, 221.66666666666666], [311.0, 131.14285714285714], [317.0, 21348.0], [315.0, 32417.0], [313.0, 32357.25], [309.0, 32405.75], [305.0, 32379.333333333332], [322.0, 20041.75], [328.0, 16104.166666666666], [334.0, 226.0], [335.0, 32007.5], [333.0, 31926.8], [325.0, 31965.0], [337.0, 11.0], [347.0, 15879.833333333334], [350.0, 31705.666666666668], [344.0, 31958.0], [343.0, 31916.0], [338.0, 31905.333333333332], [354.0, 15.0], [362.0, 15905.333333333334], [367.0, 18006.142857142855], [363.0, 31836.0], [359.0, 31772.0], [356.0, 31690.666666666668], [353.0, 31726.333333333332], [381.0, 12.666666666666666], [368.0, 5315.666666666667], [375.0, 15824.75], [378.0, 16.0], [380.0, 8010.25], [382.0, 31460.5], [379.0, 31470.666666666668], [376.0, 31639.0], [373.0, 31479.6], [387.0, 15906.833333333334], [390.0, 14.0], [393.0, 12730.2], [397.0, 31831.5], [395.0, 31805.0], [391.0, 31824.5], [389.0, 31806.0], [384.0, 31792.5], [400.0, 18927.8], [403.0, 16.0], [407.0, 15754.5], [410.0, 14.5], [412.0, 15.5], [415.0, 31459.0], [411.0, 31486.25], [405.0, 31509.0], [416.0, 7983.75], [421.0, 17.0], [426.0, 16.333333333333332], [430.0, 218.0], [428.0, 29151.333333333332], [425.0, 29148.0], [422.0, 29094.5], [418.0, 29166.0], [435.0, 29079.0], [436.0, 7458.25], [440.0, 221.0], [443.0, 216.5], [444.0, 29193.0], [441.0, 29209.75], [437.0, 29134.0], [434.0, 29095.0], [432.0, 29118.25], [449.0, 221.0], [453.0, 116.5], [456.0, 115.5], [462.0, 6863.5], [461.0, 27140.0], [451.0, 29182.0], [459.0, 27366.0], [457.0, 27437.0], [455.0, 27439.0], [448.0, 29211.25], [454.0, 29147.666666666668], [476.0, 13.0], [467.0, 218.0], [473.0, 219.5], [474.0, 82.0], [475.0, 21567.0], [479.0, 27484.0], [471.0, 27231.5], [469.0, 27391.5], [465.0, 27226.5], [464.0, 27759.0], [494.0, 13495.5], [480.0, 15.5], [484.0, 219.5], [487.0, 26401.0], [485.0, 26736.5], [492.0, 8949.0], [483.0, 26715.0], [481.0, 27740.5], [491.0, 13457.5], [495.0, 26374.0], [493.0, 26653.0], [490.0, 26732.0], [489.0, 26486.0], [499.0, 216.0], [505.0, 15837.6], [508.0, 26327.666666666668], [502.0, 26387.0], [498.0, 26862.0], [496.0, 26393.0], [538.0, 15062.142857142857], [514.0, 13.0], [512.0, 84.0], [518.0, 15903.6], [540.0, 17603.666666666668], [542.0, 3604.2], [524.0, 14.5], [522.0, 26391.0], [532.0, 15.25], [534.0, 5280.2], [530.0, 15.666666666666666], [568.0, 90.40000000000002], [546.0, 53.9], [544.0, 84.11764705882354], [548.0, 14.0], [550.0, 26555.333333333332], [572.0, 77.55555555555556], [570.0, 164.25], [562.0, 61.5], [560.0, 176.4], [574.0, 6642.764705882353], [554.0, 8892.5], [558.0, 214.83333333333334], [556.0, 13284.25], [564.0, 172.2], [566.0, 4470.2], [602.0, 12.75], [578.0, 5208.923076923077], [580.0, 79.5], [584.0, 8429.375], [576.0, 79.33333333333333], [606.0, 12652.0], [592.0, 22292.6], [598.0, 13.333333333333334], [594.0, 22283.0], [582.0, 112.0], [600.0, 21052.0], [614.0, 13.0], [608.0, 12.0], [616.0, 12.5], [628.0, 8067.285714285715], [626.0, 10.0], [638.0, 18707.0], [636.0, 18738.666666666668], [622.0, 18727.0], [660.0, 96.4], [656.0, 149.33333333333331], [666.0, 9606.333333333334], [658.0, 18811.0], [654.0, 18768.5], [652.0, 18759.5], [648.0, 18757.0], [644.0, 18753.0], [702.0, 18692.0], [678.0, 216.0], [696.0, 12.0], [680.0, 113.99999999999999], [686.0, 13.5], [676.0, 18850.0], [674.0, 18835.666666666668], [682.0, 18665.666666666668], [692.0, 14.0], [690.0, 18761.0], [688.0, 18681.0], [700.0, 18692.5], [698.0, 18721.0], [694.0, 18728.0], [732.0, 17193.0], [706.0, 7427.714285714286], [708.0, 15.0], [714.0, 17.0], [718.0, 5810.0], [734.0, 17179.0], [722.0, 17171.0], [730.0, 17109.0], [728.0, 17107.0], [726.0, 17113.0], [724.0, 17116.0], [736.0, 8812.5], [764.0, 3237.8], [744.0, 4386.0], [746.0, 17100.0], [748.0, 5678.666666666667], [750.0, 16994.0], [752.0, 4282.0], [756.0, 2850.1666666666665], [754.0, 16991.0], [762.0, 16166.0], [760.0, 16177.0], [742.0, 17155.0], [740.0, 17162.0], [738.0, 17168.0], [758.0, 16200.0], [792.0, 17069.0], [780.0, 5195.0], [788.0, 13.5], [798.0, 15.0], [796.0, 17031.75], [782.0, 15554.0], [778.0, 15353.0], [774.0, 15352.5], [770.0, 15335.0], [828.0, 7882.25], [824.0, 125.68749999999999], [826.0, 4779.538461538462], [802.0, 11456.0], [800.0, 17151.75], [804.0, 16188.5], [808.0, 18.0], [810.0, 16141.0], [818.0, 3640.777777777778], [822.0, 1957.625], [820.0, 5450.166666666666], [830.0, 13.0], [816.0, 16133.333333333334], [838.0, 10303.0], [836.0, 177.0], [832.0, 47.166666666666664], [834.0, 6687.285714285714], [840.0, 6308.6], [846.0, 15698.0], [858.0, 15.0], [860.0, 8796.888888888889], [862.0, 5604.333333333333], [850.0, 82.0], [852.0, 15777.666666666666], [866.0, 80.66666666666666], [882.0, 10.666666666666666], [894.0, 12.666666666666666], [888.0, 15453.0], [880.0, 16299.25], [872.0, 16316.0], [870.0, 16241.8], [898.0, 219.0], [900.0, 219.0], [904.0, 214.33333333333334], [914.0, 4126.5], [916.0, 216.0], [926.0, 7962.5], [924.0, 15866.0], [922.0, 15909.0], [934.0, 14.333333333333334], [930.0, 4087.75], [928.0, 14.666666666666666], [932.0, 6372.0], [942.0, 81.0], [936.0, 16169.5], [946.0, 67.5], [950.0, 210.0], [948.0, 16117.0], [952.0, 244.0], [956.0, 15490.666666666666], [966.0, 5270.333333333334], [972.0, 215.0], [980.0, 15592.5], [978.0, 15530.0], [974.0, 15507.0], [968.0, 15485.0], [964.0, 15522.0], [962.0, 15525.0], [1018.0, 15913.0], [1008.0, 415.0], [994.0, 15.0], [992.0, 15811.0], [998.0, 15827.5], [996.0, 15860.0], [1014.0, 11.0], [1020.0, 16190.0], [1012.0, 15895.5], [1010.0, 15887.0], [1002.0, 15842.0], [1000.0, 15887.5], [1032.0, 12.5], [1044.0, 120.5], [1084.0, 224.0], [1068.0, 15621.4], [1060.0, 15483.0], [1056.0, 15497.5], [1048.0, 15498.5], [1036.0, 16141.0], [1088.0, 13.0], [1096.0, 5300.5], [1092.0, 15832.0], [1112.0, 219.5], [1144.0, 836.0], [1140.0, 15507.25], [1136.0, 15487.0], [1132.0, 15504.0], [1108.0, 15749.0], [1104.0, 15835.0], [1204.0, 15.5], [1152.0, 132.6], [1212.0, 14.0], [1192.0, 4727.333333333333], [1208.0, 14040.0], [1200.0, 14076.0], [1196.0, 14053.0], [1180.0, 15818.0], [1168.0, 15774.333333333334], [1236.0, 14.0], [1244.0, 218.5], [1252.0, 5419.0], [1336.0, 15584.0], [1280.0, 15.333333333333334], [1296.0, 10527.666666666666], [1316.0, 82.66666666666666], [1324.0, 15577.0], [1312.0, 15450.5], [1308.0, 15422.0], [1304.0, 15413.0], [1292.0, 15580.5], [1284.0, 15495.0], [1344.0, 224.5], [1348.0, 316.5], [1356.0, 13.5], [1392.0, 15.0], [1384.0, 13.0], [1368.0, 6889.666666666667], [1380.0, 13607.5], [1364.0, 14395.0], [1416.0, 219.66666666666666], [1444.0, 175.0], [1432.0, 6210.222222222223], [1436.0, 6282.111111111111], [1468.0, 13421.0], [1456.0, 13436.5], [1428.0, 13382.666666666666], [1484.0, 11125.333333333334], [1476.0, 5331.0], [1532.0, 4045.222222222222], [1488.0, 8216.75], [1492.0, 10683.25], [1472.0, 13385.0], [1480.0, 214.66666666666666], [1528.0, 7183.0], [1512.0, 8968.0], [1508.0, 7156.0], [1504.0, 10676.0], [1584.0, 352.3333333333333], [1592.0, 226.66666666666666], [1564.0, 13.666666666666666], [1548.0, 7176.0], [1544.0, 8979.5], [1572.0, 2875.4285714285716], [1580.0, 116.0], [1568.0, 5375.25], [1588.0, 7398.0], [1556.0, 7655.5], [1552.0, 7005.0], [1600.0, 152.66666666666669], [1608.0, 13.5], [1604.0, 7599.666666666667], [1628.0, 114.0], [1632.0, 4055.0], [1644.0, 5414.25], [1612.0, 11.0], [1660.0, 7384.5], [1656.0, 7914.5], [1652.0, 7153.75], [1648.0, 7222.25], [1616.0, 12.0], [1620.0, 11.5], [1624.0, 214.0], [1716.0, 189.75], [1720.0, 817.5714285714286], [1704.0, 1148.142857142857], [1672.0, 275.0], [1724.0, 7542.0], [1708.0, 7126.5], [1700.0, 7155.0], [1692.0, 8132.666666666667], [1784.0, 151.33333333333331], [1728.0, 9.5], [1752.0, 112.5], [1756.0, 7086.333333333333], [1732.0, 4879.125], [1736.0, 7590.0], [1788.0, 3675.0], [1776.0, 220.0], [1760.0, 286.6666666666667], [1772.0, 84.33333333333331], [1768.0, 7400.666666666667], [1740.0, 4614.0], [1744.0, 3210.0], [1748.0, 6646.5], [1844.0, 3629.0], [1792.0, 841.0], [1832.0, 3617.333333333333], [1836.0, 5732.2], [1852.0, 3695.5], [1816.0, 68.5], [1848.0, 6910.333333333333], [1840.0, 7135.0], [1796.0, 7563.0], [1856.0, 746.6], [1876.0, 415.0], [1872.0, 7434.0], [1880.0, 3152.153846153846], [1884.0, 332.875], [1864.0, 418.0], [1868.0, 2799.125], [1904.0, 1828.5833333333335], [1908.0, 6856.0], [1916.0, 226.0], [1888.0, 86.42857142857143], [1896.0, 220.0], [1892.0, 261.8], [1860.0, 286.3333333333333], [1968.0, 5769.5], [1924.0, 1136.5], [1936.0, 15.0], [1944.0, 7282.333333333333], [1920.0, 7351.0], [1940.0, 6823.0], [1932.0, 3387.6], [1952.0, 1229.0], [1980.0, 6470.0], [1976.0, 7276.0], [1956.0, 11.0], [1960.0, 4652.375], [1988.0, 3293.125], [1992.0, 3340.666666666667], [1996.0, 6861.0], [1984.0, 4355.166666666667], [2020.0, 5098.0], [2024.0, 133.71428571428572], [2028.0, 2854.0], [2016.0, 426.0], [2040.0, 6663.0], [2004.0, 1442.6666666666667], [2000.0, 7031.0], [2008.0, 7677.0], [2160.0, 3317.0], [2112.0, 181.33333333333331], [2152.0, 3033.0], [2144.0, 3034.5], [2136.0, 3049.3333333333335], [2128.0, 6583.2], [2120.0, 6634.0], [2088.0, 3031.5], [2048.0, 3045.0], [2064.0, 6681.0], [2056.0, 6796.0], [2240.0, 629.0], [2200.0, 158.33333333333334], [2256.0, 17.75], [2208.0, 220.0], [2224.0, 285.66666666666663], [2296.0, 4776.666666666667], [2280.0, 3250.5], [2264.0, 6613.0], [2248.0, 3026.5], [2416.0, 222.0], [2376.0, 10.0], [2384.0, 13.0], [2392.0, 1303.8], [2408.0, 2461.1428571428573], [2424.0, 277.85714285714283], [2400.0, 4714.0], [2344.0, 3027.0], [2328.0, 3048.75], [2312.0, 3241.0], [2336.0, 3047.0], [2544.0, 3050.0], [2432.0, 214.5], [2440.0, 3346.0], [2552.0, 3570.6666666666665], [2520.0, 3053.75], [2512.0, 3043.0], [2504.0, 3048.0], [2488.0, 3053.0], [2480.0, 2679.5], [2472.0, 3046.3333333333335], [2664.0, 3045.4], [2632.0, 836.0], [2616.0, 12.0], [2640.0, 1947.0], [2648.0, 2626.0], [2584.0, 1676.25], [2576.0, 3057.3333333333335], [2560.0, 3235.5], [2656.0, 3353.0], [2672.0, 3645.0], [2592.0, 935.6666666666666], [2600.0, 423.3333333333333], [2608.0, 3368.5], [2800.0, 91.0], [2768.0, 181.66666666666669], [2784.0, 3306.6666666666665], [2776.0, 3048.25], [2760.0, 3252.0], [2744.0, 3467.3333333333335], [2720.0, 3036.0], [2704.0, 3252.0], [2688.0, 3031.3333333333335], [2912.0, 1449.2857142857142], [2816.0, 11.0], [2832.0, 3049.0], [2928.0, 343.8], [2920.0, 583.875], [2880.0, 2635.5714285714284], [2888.0, 3247.6666666666665], [2896.0, 10.0], [2904.0, 281.0], [2848.0, 13.666666666666666], [2856.0, 3259.0], [2864.0, 1926.3333333333335], [2872.0, 6.666666666666667], [3040.0, 845.5], [2952.0, 634.3333333333333], [2960.0, 1021.0], [2968.0, 2235.5], [2944.0, 541.75], [2992.0, 423.0], [2984.0, 3045.0], [2976.0, 2595.3333333333335], [3008.0, 124.50000000000001], [3048.0, 114.99999999999999], [3016.0, 96.80000000000001], [3024.0, 3229.0], [3096.0, 1929.25], [3080.0, 216.0], [3088.0, 12.0], [3072.0, 2034.1666666666667], [3104.0, 1598.8333333333335], [3184.0, 10.333333333333334], [3176.0, 2538.0], [3168.0, 1235.5], [3192.0, 2578.0], [3136.0, 2443.5], [3152.0, 13.5], [3160.0, 568.6666666666666], [3216.0, 1122.8333333333333], [3208.0, 12.5], [3200.0, 3243.0], [3312.0, 1840.0], [3320.0, 1355.0], [3224.0, 131.4], [3296.0, 3255.0], [3264.0, 1207.857142857143], [3280.0, 1444.5], [3424.0, 783.375], [3344.0, 1302.5], [3432.0, 282.0], [3440.0, 431.7], [3448.0, 214.0], [3392.0, 177.2], [3416.0, 1181.0], [3360.0, 1136.1764705882354], [3368.0, 166.25], [3376.0, 1021.8], [3336.0, 2079.0], [3568.0, 149.0], [3520.0, 1883.0], [3552.0, 1796.142857142857], [3472.0, 3259.0], [3456.0, 2620.3333333333335], [3576.0, 1037.0], [3496.0, 13.0], [3488.0, 1681.0], [3504.0, 1983.2], [3528.0, 658.4444444444445], [3536.0, 1084.4], [3544.0, 874.6], [3680.0, 867.0], [3592.0, 428.5], [3600.0, 56.44444444444445], [3616.0, 1072.5], [3704.0, 601.5], [3656.0, 2216.6666666666665], [3688.0, 644.4444444444445], [3696.0, 615.5833333333334], [3672.0, 134.2], [3624.0, 643.0], [3632.0, 601.3999999999999], [3584.0, 3257.0], [3640.0, 2489.0], [3736.0, 1208.0], [3728.0, 1664.6666666666667], [3712.0, 1025.6666666666665], [3720.0, 3043.5], [3808.0, 1648.0], [3824.0, 2483.0], [3832.0, 213.0], [3776.0, 875.5], [3752.0, 1415.6666666666667], [3768.0, 53.0], [3800.0, 1719.3333333333333], [3792.0, 940.5], [3856.0, 569.0], [3864.0, 772.5], [3880.0, 8.5], [3872.0, 4340.0], [3888.0, 218.5], [3896.0, 631.1666666666667], [3912.0, 298.8888888888889], [3904.0, 566.1250000000001], [3920.0, 255.35483870967738], [2113.0, 43.0], [2161.0, 55.0], [2169.0, 5018.0], [2137.0, 3033.0], [2089.0, 3897.0], [2049.0, 6803.0], [2201.0, 19.5], [2185.0, 466.0], [2233.0, 14.0], [2177.0, 6668.4], [2193.0, 2645.5], [2241.0, 115.75], [2249.0, 217.33333333333334], [2289.0, 4768.5], [2257.0, 3248.0], [2217.0, 3247.75], [2417.0, 843.0], [2369.0, 11.0], [2409.0, 2589.0], [2377.0, 10.0], [2393.0, 316.5], [2385.0, 3256.0], [2361.0, 3045.5], [2321.0, 3059.0], [2305.0, 4781.5], [2545.0, 3038.0], [2433.0, 2240.0], [2553.0, 3240.0], [2537.0, 3044.3333333333335], [2513.0, 3328.0], [2505.0, 3059.0], [2497.0, 3204.3333333333335], [2449.0, 3044.3333333333335], [2441.0, 2723.0], [2585.0, 1292.3333333333335], [2577.0, 709.0], [2617.0, 12.5], [2641.0, 511.2], [2625.0, 3334.5], [2609.0, 3259.0], [2601.0, 3018.6], [2561.0, 3235.0], [2801.0, 1313.142857142857], [2809.0, 3258.0], [2793.0, 3058.3333333333335], [2785.0, 3040.0], [2713.0, 3251.0], [2929.0, 1464.3333333333333], [2817.0, 2029.1666666666667], [2841.0, 15.0], [2913.0, 317.7894736842106], [2937.0, 212.0], [2921.0, 464.53846153846155], [2849.0, 273.87499999999994], [2865.0, 3049.0], [2873.0, 1700.5454545454545], [2881.0, 70.28571428571428], [2889.0, 1476.8], [2897.0, 1084.8333333333333], [2905.0, 352.8666666666667], [2953.0, 2035.8], [2945.0, 22.333333333333332], [2961.0, 149.33333333333331], [3041.0, 3262.75], [2977.0, 9.666666666666666], [2985.0, 10.571428571428571], [2993.0, 1222.9999999999998], [3009.0, 2588.6666666666665], [3065.0, 1743.1666666666667], [3057.0, 2355.6666666666665], [3049.0, 1951.6], [3017.0, 2658.0], [3033.0, 353.0], [3081.0, 1141.7777777777778], [3073.0, 14.0], [3137.0, 12.0], [3161.0, 3235.6666666666665], [3089.0, 1900.3333333333333], [3313.0, 118.0], [3201.0, 412.33333333333337], [3209.0, 215.0], [3233.0, 79.66666666666667], [3241.0, 15.0], [3257.0, 1130.0], [3265.0, 12.0], [3321.0, 1848.1666666666667], [3297.0, 10.0], [3281.0, 117.0], [3289.0, 2776.25], [3345.0, 114.83333333333334], [3329.0, 12.0], [3353.0, 1493.3333333333333], [3425.0, 2153.0], [3449.0, 1226.375], [3401.0, 1688.0], [3393.0, 3379.25], [3433.0, 1715.3333333333335], [3441.0, 117.28571428571428], [3361.0, 608.4545454545454], [3369.0, 741.6], [3377.0, 929.5714285714286], [3561.0, 1629.25], [3473.0, 1026.5], [3457.0, 484.0], [3481.0, 8.75], [3553.0, 830.0], [3569.0, 2027.6666666666667], [3577.0, 13.0], [3497.0, 1317.2222222222222], [3489.0, 2785.6666666666665], [3521.0, 70.14285714285715], [3529.0, 428.0], [3545.0, 558.0], [3681.0, 823.0], [3609.0, 165.25], [3633.0, 111.71428571428572], [3601.0, 1013.125], [3593.0, 3255.0], [3617.0, 751.2857142857143], [3689.0, 2505.5], [3697.0, 306.25], [3705.0, 551.375], [3649.0, 744.8], [3665.0, 679.4], [3657.0, 1695.0], [3673.0, 3252.0], [3625.0, 2797.5], [3641.0, 826.0], [3585.0, 3255.0], [3809.0, 10.0], [3745.0, 1338.5], [3769.0, 215.0], [3761.0, 430.0], [3793.0, 12.4], [3817.0, 2362.5], [3825.0, 632.0], [3785.0, 3328.0], [3857.0, 279.6666666666667], [3849.0, 2111.0], [3865.0, 415.6666666666667], [3873.0, 1723.0], [3881.0, 8.75], [3897.0, 118.0], [3905.0, 543.1176470588235], [3921.0, 57.7], [3913.0, 325.47826086956525], [1085.0, 12500.6], [1081.0, 15595.666666666666], [1077.0, 15638.5], [1073.0, 15646.333333333334], [1053.0, 15499.5], [1041.0, 15425.0], [1029.0, 16141.0], [1137.0, 422.5], [1097.0, 219.0], [1101.0, 15801.0], [1129.0, 119.5], [1121.0, 8075.25], [1141.0, 833.0], [1149.0, 15499.75], [1145.0, 15498.0], [1105.0, 7994.5], [1109.0, 4050.0], [1117.0, 14.0], [1113.0, 16212.333333333334], [1157.0, 13.0], [1189.0, 15.333333333333334], [1197.0, 16.0], [1201.0, 14046.0], [1193.0, 14154.0], [1165.0, 15851.0], [1161.0, 15568.0], [1153.0, 15492.75], [1217.0, 11662.5], [1241.0, 10530.0], [1257.0, 114.5], [1277.0, 15571.0], [1273.0, 15575.0], [1265.0, 15487.0], [1237.0, 15801.5], [1233.0, 15510.5], [1221.0, 15580.0], [1281.0, 10349.5], [1285.0, 82.0], [1321.0, 219.33333333333331], [1341.0, 15363.75], [1337.0, 15385.0], [1317.0, 15543.5], [1301.0, 15403.0], [1397.0, 13476.5], [1401.0, 131.5], [1361.0, 14.0], [1393.0, 13661.5], [1389.0, 13406.0], [1373.0, 13550.0], [1365.0, 13815.0], [1349.0, 13489.5], [1345.0, 15394.0], [1465.0, 8951.666666666666], [1437.0, 3526.25], [1421.0, 8128.0], [1469.0, 1386.5], [1429.0, 81.0], [1425.0, 13483.25], [1461.0, 13384.0], [1453.0, 13361.25], [1449.0, 13398.5], [1445.0, 13273.0], [1485.0, 6857.0], [1501.0, 218.0], [1473.0, 2931.6], [1497.0, 5515.166666666667], [1533.0, 168.0], [1525.0, 8861.0], [1509.0, 13.0], [1517.0, 114.0], [1481.0, 170.75], [1477.0, 12.666666666666666], [1589.0, 13.0], [1537.0, 16.333333333333332], [1545.0, 8070.0], [1597.0, 335.5], [1593.0, 7565.5], [1565.0, 3162.1428571428573], [1569.0, 1349.4], [1577.0, 217.0], [1581.0, 6632.222222222223], [1573.0, 1023.125], [1601.0, 3978.333333333333], [1649.0, 619.0], [1609.0, 7614.4], [1629.0, 422.0], [1645.0, 11.0], [1641.0, 7084.5], [1637.0, 7956.2], [1633.0, 13.0], [1617.0, 12.0], [1625.0, 3648.7142857142862], [1669.0, 215.0], [1717.0, 1082.6], [1677.0, 3037.8], [1713.0, 7400.0], [1721.0, 3946.75], [1705.0, 52.4], [1701.0, 7139.0], [1681.0, 218.5], [1685.0, 8104.0], [1693.0, 220.5], [1665.0, 7408.6], [1689.0, 8100.75], [1777.0, 4347.285714285715], [1749.0, 56.0], [1785.0, 10.5], [1789.0, 215.5], [1761.0, 286.0], [1765.0, 3732.5], [1773.0, 7422.5], [1741.0, 11.75], [1753.0, 6781.0], [1745.0, 267.25], [1793.0, 6323.166666666666], [1825.0, 1248.0], [1817.0, 6155.0], [1837.0, 17.0], [1829.0, 7575.0], [1845.0, 3671.5], [1853.0, 946.1666666666666], [1849.0, 6735.0], [1813.0, 5108.666666666666], [1809.0, 7651.0], [1857.0, 5994.4], [1877.0, 367.0], [1881.0, 1245.857142857143], [1885.0, 5061.166666666667], [1873.0, 113.83333333333334], [1861.0, 2268.714285714286], [1905.0, 1433.6], [1913.0, 5569.0], [1917.0, 7286.5], [1897.0, 283.6666666666667], [1901.0, 3665.5], [1893.0, 395.2857142857143], [1889.0, 4296.4], [1869.0, 10.6], [1865.0, 7417.5], [1925.0, 1229.75], [1921.0, 2580.6666666666665], [1949.0, 7293.5], [1937.0, 15.0], [1941.0, 3644.5], [1969.0, 399.2], [1973.0, 216.4], [1953.0, 94.4], [1977.0, 6479.0], [1961.0, 738.5], [1957.0, 422.0], [1929.0, 491.66666666666663], [2009.0, 3401.666666666667], [2021.0, 842.6], [2017.0, 150.33333333333331], [2005.0, 827.0], [2045.0, 6625.8], [2013.0, 6709.333333333333], [2001.0, 6873.0], [1989.0, 6457.0], [2146.0, 3333.0], [2138.0, 3041.0], [2130.0, 6550.0], [2106.0, 3047.8], [2098.0, 3048.0], [2082.0, 3042.75], [2074.0, 3047.0], [2194.0, 57.0], [2242.0, 490.0], [2226.0, 132.2857142857143], [2298.0, 4776.5], [2274.0, 3262.6666666666665], [2250.0, 3292.5], [2234.0, 3249.25], [2210.0, 3289.0], [2186.0, 3500.0], [2410.0, 1637.5], [2362.0, 12.0], [2394.0, 1402.4], [2426.0, 12.333333333333334], [2402.0, 4709.0], [2330.0, 3036.5], [2386.0, 3255.0], [2370.0, 3208.0], [2354.0, 3247.6666666666665], [2346.0, 3054.5], [2338.0, 3030.5], [2450.0, 14.0], [2482.0, 3048.0], [2466.0, 3041.6666666666665], [2458.0, 3052.6666666666665], [2442.0, 3255.0], [2434.0, 4746.0], [2658.0, 3388.0], [2578.0, 41.5], [2586.0, 748.0], [2594.0, 1667.7], [2682.0, 3241.3333333333335], [2642.0, 3233.5], [2634.0, 3300.0], [2626.0, 3236.0], [2618.0, 3043.0], [2570.0, 3057.2], [2810.0, 622.0000000000001], [2770.0, 3242.3333333333335], [2762.0, 3053.0], [2754.0, 3264.3333333333335], [2738.0, 3045.0], [2714.0, 3049.0], [2834.0, 117.0], [2866.0, 69.5], [2850.0, 854.0], [2874.0, 222.0], [2882.0, 14.0], [2914.0, 763.2], [2922.0, 524.3333333333333], [2938.0, 221.0], [2930.0, 145.66666666666669], [2898.0, 188.875], [2906.0, 217.40000000000003], [2962.0, 1675.3333333333335], [2946.0, 1537.0], [3050.0, 10.5], [2978.0, 11.0], [2994.0, 1030.7142857142858], [3010.0, 14.0], [3034.0, 14.0], [3018.0, 3871.0], [3090.0, 11.2], [3074.0, 1059.1666666666665], [3082.0, 4432.0], [3098.0, 990.1428571428571], [3186.0, 1644.7142857142858], [3194.0, 1295.0], [3122.0, 11.666666666666666], [3170.0, 3297.0], [3154.0, 2544.5], [3130.0, 3247.6666666666665], [3226.0, 211.75], [3234.0, 870.8888888888889], [3242.0, 674.875], [3266.0, 12.0], [3298.0, 11.0], [3250.0, 12.0], [3354.0, 1302.4444444444443], [3330.0, 1410.1666666666667], [3378.0, 1016.0], [3346.0, 1676.0], [3338.0, 2490.5], [3426.0, 832.0], [3434.0, 891.5], [3442.0, 375.6153846153846], [3402.0, 13.0], [3410.0, 3318.6666666666665], [3362.0, 98.14285714285712], [3370.0, 144.0], [3554.0, 82.0], [3482.0, 1632.0], [3474.0, 3263.5], [3466.0, 2763.0], [3514.0, 3233.6666666666665], [3506.0, 1676.5], [3562.0, 660.2], [3570.0, 3036.0], [3578.0, 1012.8], [3490.0, 12.0], [3498.0, 12.0], [3522.0, 218.5], [3546.0, 3245.0], [3538.0, 1668.5], [3698.0, 181.36363636363637], [3602.0, 270.6363636363636], [3610.0, 384.90909090909093], [3666.0, 291.3333333333333], [3674.0, 3250.0], [3706.0, 1771.6666666666667], [3682.0, 1999.6666666666667], [3690.0, 157.0], [3626.0, 3281.0], [3634.0, 813.0714285714286], [3642.0, 2498.5], [3770.0, 518.5], [3762.0, 11.666666666666666], [3746.0, 1684.0], [3754.0, 261.2], [3730.0, 1229.5], [3818.0, 11.0], [3834.0, 1635.0], [3794.0, 1010.4], [3802.0, 217.0], [3850.0, 3287.0], [3842.0, 2215.6], [3866.0, 79.50000000000001], [3874.0, 14.0], [3882.0, 1333.8], [3890.0, 1464.8461538461538], [3898.0, 210.5], [3906.0, 11.4], [3922.0, 917.5], [3914.0, 189.27083333333331], [2115.0, 3835.1428571428573], [2163.0, 6758.333333333333], [2155.0, 3134.6666666666665], [2131.0, 3035.0], [2123.0, 6697.333333333333], [2107.0, 3049.0], [2179.0, 3335.25], [2227.0, 2696.0], [2195.0, 28.0], [2219.0, 222.5], [2259.0, 3240.0], [2243.0, 3292.6666666666665], [2203.0, 3344.25], [2363.0, 251.0], [2347.0, 247.6], [2395.0, 217.0], [2403.0, 45.66666666666667], [2411.0, 11.75], [2419.0, 2636.6], [2427.0, 3056.2], [2379.0, 3263.0], [2435.0, 10.75], [2443.0, 11.5], [2451.0, 14.0], [2475.0, 627.6666666666666], [2531.0, 3198.25], [2523.0, 3220.6666666666665], [2459.0, 3028.0], [2579.0, 1688.0], [2619.0, 116.5], [2643.0, 12.5], [2683.0, 3042.0], [2675.0, 3752.0], [2667.0, 3042.3333333333335], [2659.0, 3043.0], [2651.0, 3313.3333333333335], [2563.0, 3233.5], [2787.0, 181.0], [2779.0, 2295.0], [2811.0, 118.25000000000001], [2803.0, 3038.0], [2747.0, 3265.0], [2731.0, 3010.6], [2723.0, 3047.3333333333335], [2699.0, 3251.0], [2691.0, 3035.0], [2931.0, 2041.6666666666667], [2915.0, 822.5], [2819.0, 11.0], [2843.0, 3048.4], [2835.0, 3247.6666666666665], [2827.0, 2876.2], [2875.0, 3572.0], [2923.0, 164.25], [2867.0, 195.0], [2859.0, 1640.1666666666667], [2851.0, 2923.0], [2883.0, 2315.8], [2939.0, 3059.8], [2907.0, 850.5925925925925], [2899.0, 1640.8], [2971.0, 1622.5], [2947.0, 1225.7777777777778], [2955.0, 11.5], [2963.0, 10.0], [3067.0, 9.75], [3051.0, 10.75], [3059.0, 3465.0], [3019.0, 510.0], [3027.0, 1698.3333333333333], [3035.0, 3372.166666666667], [2995.0, 1043.0], [2987.0, 3041.6666666666665], [3003.0, 3191.4], [3171.0, 11.25], [3083.0, 12.0], [3091.0, 46.83333333333334], [3099.0, 636.75], [3179.0, 1182.6666666666665], [3187.0, 221.0], [3155.0, 13.0], [3147.0, 3246.5], [3163.0, 419.0], [3107.0, 597.5555555555555], [3115.0, 2177.2], [3123.0, 12.0], [3315.0, 1555.0], [3203.0, 1685.0], [3235.0, 490.33333333333337], [3243.0, 1019.0], [3307.0, 13.0], [3323.0, 1725.0], [3267.0, 1195.8], [3291.0, 2157.5], [3283.0, 3044.6666666666665], [3227.0, 216.4], [3219.0, 1406.0], [3211.0, 2702.75], [3299.0, 3254.3333333333335], [3251.0, 55.2], [3259.0, 870.5], [3339.0, 117.25000000000001], [3387.0, 2024.2857142857142], [3347.0, 146.33333333333331], [3443.0, 2330.428571428571], [3395.0, 735.5], [3451.0, 3238.5], [3419.0, 1605.75], [3355.0, 357.0], [3379.0, 1027.857142857143], [3371.0, 674.6], [3363.0, 969.0], [3555.0, 1310.0], [3459.0, 1108.125], [3571.0, 418.0], [3579.0, 3250.0], [3531.0, 1099.0], [3523.0, 1687.0], [3539.0, 3258.0], [3491.0, 1147.6666666666665], [3499.0, 1663.5], [3507.0, 2118.0], [3683.0, 862.0], [3595.0, 1474.2], [3587.0, 3248.5], [3603.0, 562.6666666666667], [3619.0, 1304.3636363636363], [3651.0, 3045.0], [3659.0, 1670.5], [3707.0, 476.8888888888889], [3691.0, 215.75], [3699.0, 495.9090909090909], [3667.0, 3261.5], [3675.0, 292.0], [3635.0, 45.33333333333333], [3811.0, 3326.6666666666665], [3715.0, 3049.3333333333335], [3723.0, 3043.6666666666665], [3731.0, 13.0], [3763.0, 12.333333333333334], [3771.0, 211.0], [3795.0, 296.0], [3803.0, 215.0], [3819.0, 1664.3333333333335], [3739.0, 3058.6666666666665], [3827.0, 628.25], [3899.0, 136.4], [3851.0, 274.5], [3891.0, 113.875], [3859.0, 3851.5], [3867.0, 1741.2857142857142], [3915.0, 225.22535211267598], [3907.0, 273.7857142857143], [3875.0, 279.6666666666667], [3883.0, 287.66666666666663], [539.0, 10.666666666666666], [543.0, 66.25], [537.0, 10.285714285714286], [541.0, 12.0], [531.0, 14.5], [533.0, 21101.8], [529.0, 26335.0], [525.0, 26374.666666666668], [513.0, 26359.2], [515.0, 26329.5], [551.0, 160.5], [569.0, 2649.076923076923], [547.0, 11061.666666666666], [545.0, 73.5], [549.0, 185.0], [573.0, 175.1], [571.0, 79.66666666666666], [575.0, 2129.4545454545455], [561.0, 12802.0], [555.0, 288.5], [553.0, 112.5], [557.0, 3901.3333333333335], [565.0, 9992.555555555555], [567.0, 128.0952380952381], [563.0, 131.0], [583.0, 12.2], [579.0, 47.166666666666664], [577.0, 215.0], [585.0, 219.5], [587.0, 22268.666666666668], [601.0, 15.0], [597.0, 14014.333333333334], [595.0, 21077.0], [607.0, 8.0], [605.0, 10.0], [603.0, 12621.4], [599.0, 44.00000000000001], [581.0, 8409.75], [615.0, 12.5], [609.0, 14.0], [633.0, 6256.666666666666], [639.0, 10.0], [613.0, 6034.285714285714], [611.0, 21079.2], [623.0, 12.666666666666666], [619.0, 22284.5], [617.0, 22225.0], [629.0, 10.25], [631.0, 18718.333333333332], [625.0, 14091.5], [643.0, 13.0], [657.0, 9523.333333333332], [663.0, 5566.571428571428], [671.0, 18846.8], [661.0, 18883.666666666668], [641.0, 18769.0], [679.0, 14130.25], [673.0, 417.0], [699.0, 115.5], [703.0, 17217.0], [685.0, 13.0], [687.0, 18675.4], [689.0, 12.0], [693.0, 418.0], [695.0, 291.33333333333337], [731.0, 2998.3333333333335], [705.0, 220.0], [707.0, 13.0], [729.0, 17111.0], [709.0, 17181.333333333332], [713.0, 7717.777777777777], [719.0, 17205.0], [717.0, 17204.0], [725.0, 8679.0], [723.0, 17131.0], [721.0, 17172.5], [727.0, 17109.0], [735.0, 4419.0], [733.0, 6004.666666666667], [765.0, 13.5], [741.0, 5872.333333333333], [737.0, 5805.0], [739.0, 17155.0], [763.0, 5407.666666666667], [761.0, 16186.0], [743.0, 17159.0], [745.0, 8616.0], [749.0, 17007.0], [747.0, 17023.0], [751.0, 17016.0], [753.0, 8506.0], [767.0, 15337.666666666666], [757.0, 8112.0], [755.0, 17001.0], [759.0, 16145.0], [773.0, 13.0], [771.0, 14.5], [775.0, 15.0], [779.0, 7675.5], [793.0, 14.5], [789.0, 17060.5], [785.0, 17009.0], [783.0, 15550.0], [769.0, 15351.0], [803.0, 15.0], [825.0, 164.375], [821.0, 4039.5], [829.0, 129.28571428571428], [827.0, 10.666666666666666], [831.0, 5225.333333333333], [813.0, 16152.0], [807.0, 16143.333333333334], [835.0, 422.0], [833.0, 218.75], [837.0, 149.0], [847.0, 13.0], [849.0, 9499.0], [863.0, 15.0], [861.0, 15773.0], [855.0, 15759.333333333334], [843.0, 15702.666666666666], [893.0, 12.666666666666666], [867.0, 12.0], [869.0, 112.5], [865.0, 9711.4], [875.0, 11.333333333333334], [883.0, 11.666666666666666], [895.0, 15545.5], [891.0, 15492.333333333334], [887.0, 16233.5], [885.0, 16263.0], [927.0, 7962.5], [897.0, 150.66666666666666], [913.0, 10431.0], [921.0, 15842.0], [901.0, 15519.0], [899.0, 15598.25], [919.0, 15919.0], [917.0, 15877.333333333334], [911.0, 15532.5], [909.0, 15534.25], [905.0, 15552.75], [955.0, 141.5], [959.0, 9383.0], [953.0, 7780.125], [949.0, 15511.0], [947.0, 16133.5], [943.0, 16148.5], [939.0, 16146.333333333334], [929.0, 15887.0], [969.0, 216.33333333333331], [971.0, 6710.857142857143], [979.0, 323.0], [991.0, 82.33333333333334], [989.0, 15847.5], [987.0, 15481.0], [985.0, 15502.6], [967.0, 15498.0], [995.0, 15.0], [1003.0, 16.5], [1011.0, 82.33333333333334], [1009.0, 12743.0], [1023.0, 16159.0], [1017.0, 15897.2], [1005.0, 15871.666666666666], [1078.0, 5385.333333333333], [1034.0, 10136.875], [1038.0, 216.0], [1050.0, 10337.333333333334], [1046.0, 15499.8], [1062.0, 290.0], [1066.0, 16.333333333333332], [1070.0, 15670.0], [1058.0, 15469.0], [1054.0, 15499.0], [1090.0, 6789.428571428572], [1122.0, 14.0], [1134.0, 833.0], [1146.0, 12.0], [1098.0, 15805.5], [1094.0, 15775.0], [1106.0, 7862.5], [1110.0, 15745.0], [1114.0, 5514.666666666667], [1118.0, 217.5], [1178.0, 9041.57142857143], [1206.0, 15.666666666666666], [1214.0, 15518.0], [1186.0, 15018.0], [1174.0, 15864.75], [1170.0, 15855.0], [1162.0, 15760.0], [1246.0, 218.5], [1274.0, 13.0], [1242.0, 14.0], [1250.0, 146.0], [1254.0, 10457.0], [1262.0, 15474.25], [1258.0, 15477.75], [1226.0, 15570.0], [1294.0, 10501.333333333334], [1334.0, 423.0], [1282.0, 220.0], [1290.0, 15604.75], [1286.0, 15601.5], [1298.0, 118.5], [1314.0, 6311.4], [1322.0, 9760.375], [1326.0, 215.0], [1402.0, 8179.0], [1350.0, 217.6], [1370.0, 4063.4285714285716], [1382.0, 3268.2], [1390.0, 427.0], [1378.0, 13516.2], [1362.0, 13367.5], [1358.0, 13377.333333333334], [1354.0, 13541.2], [1422.0, 13.5], [1418.0, 10189.75], [1446.0, 116.5], [1466.0, 6825.5], [1470.0, 6911.0], [1434.0, 859.3333333333334], [1454.0, 13275.0], [1442.0, 13278.0], [1410.0, 13484.0], [1474.0, 3392.5], [1498.0, 217.0], [1494.0, 7397.666666666667], [1486.0, 159.57142857142856], [1522.0, 216.0], [1490.0, 839.0], [1506.0, 10647.5], [1502.0, 10628.4], [1590.0, 14.0], [1566.0, 216.0], [1558.0, 5042.666666666667], [1574.0, 168.25], [1582.0, 11.0], [1598.0, 7576.8], [1562.0, 7202.75], [1542.0, 8987.25], [1538.0, 8971.0], [1614.0, 3512.857142857143], [1602.0, 12.0], [1654.0, 2395.666666666667], [1650.0, 552.8333333333334], [1642.0, 358.3333333333333], [1638.0, 15.0], [1658.0, 6633.0], [1622.0, 6147.75], [1630.0, 8107.8], [1726.0, 725.0], [1718.0, 219.33333333333334], [1722.0, 407.64285714285717], [1714.0, 212.0], [1678.0, 8029.0], [1698.0, 3124.4285714285716], [1702.0, 1026.0], [1710.0, 1764.25], [1706.0, 7138.5], [1674.0, 15.0], [1670.0, 15.0], [1682.0, 8115.75], [1742.0, 351.6666666666667], [1734.0, 440.0], [1730.0, 92.23076923076923], [1750.0, 215.5], [1746.0, 7540.5], [1758.0, 7146.5], [1738.0, 112.25], [1782.0, 4496.2], [1786.0, 429.5], [1790.0, 432.0], [1778.0, 11.0], [1770.0, 291.16666666666663], [1798.0, 429.6666666666667], [1806.0, 13.5], [1822.0, 1246.0], [1794.0, 12.5], [1826.0, 219.0], [1830.0, 150.33333333333334], [1838.0, 16.0], [1834.0, 16.0], [1854.0, 835.5], [1842.0, 4520.666666666667], [1814.0, 1218.0], [1858.0, 286.5], [1862.0, 375.55555555555554], [1874.0, 292.25], [1882.0, 226.6153846153846], [1878.0, 445.75], [1886.0, 621.8333333333334], [1870.0, 44.83333333333333], [1910.0, 3717.25], [1914.0, 224.0], [1894.0, 2892.25], [1898.0, 7129.0], [1890.0, 71.00000000000001], [1866.0, 137.2], [1930.0, 5740.6], [1950.0, 213.0], [1926.0, 4717.5], [1922.0, 6838.0], [1938.0, 224.42857142857142], [1946.0, 218.25], [1974.0, 12.5], [1982.0, 320.5], [1958.0, 832.3333333333334], [1962.0, 6670.5], [1970.0, 6680.5], [1934.0, 6782.5], [1986.0, 17.333333333333332], [2010.0, 1347.125], [2022.0, 2091.625], [2026.0, 3979.4285714285716], [2030.0, 290.6666666666667], [1998.0, 10.5], [2038.0, 6596.333333333333], [2018.0, 7099.6], [2148.0, 50.0], [2164.0, 54.0], [2172.0, 6646.0], [2108.0, 3050.0], [2092.0, 3892.0], [2068.0, 6681.25], [2188.0, 259.5], [2228.0, 13.2], [2196.0, 61.0], [2244.0, 114.0], [2236.0, 3245.0], [2212.0, 3008.0], [2420.0, 3254.0], [2364.0, 363.83333333333337], [2324.0, 3059.0], [2316.0, 3242.0], [2308.0, 3041.3333333333335], [2388.0, 13.0], [2396.0, 80.66666666666667], [2404.0, 1247.2857142857142], [2412.0, 13.0], [2428.0, 3063.0], [2380.0, 3268.0], [2348.0, 3257.5], [2444.0, 2166.0], [2436.0, 1622.4], [2540.0, 3053.0], [2532.0, 3044.0], [2524.0, 3041.0], [2516.0, 3048.6666666666665], [2492.0, 3043.5], [2476.0, 3046.25], [2460.0, 3279.0], [2452.0, 3049.6666666666665], [2676.0, 3235.0], [2580.0, 2245.8333333333335], [2572.0, 872.0], [2588.0, 109.42857142857142], [2668.0, 3055.0], [2684.0, 3051.0], [2628.0, 1275.0], [2644.0, 416.0], [2612.0, 1827.8], [2604.0, 3294.6666666666665], [2596.0, 3201.5], [2620.0, 59.777777777777764], [2780.0, 46.25], [2796.0, 2344.75], [2812.0, 136.2], [2804.0, 3312.0], [2772.0, 3168.5], [2716.0, 3176.5], [2708.0, 3254.0], [2916.0, 323.0], [2868.0, 1069.4], [2820.0, 1888.0], [2836.0, 55.4], [2828.0, 3046.0], [2932.0, 10.4], [2940.0, 830.25], [2924.0, 440.0], [2884.0, 1091.0], [2892.0, 1955.6], [2900.0, 392.375], [2908.0, 271.2105263157894], [2860.0, 215.0], [2876.0, 13.5], [2948.0, 1521.3333333333335], [2988.0, 10.5], [3052.0, 12.0], [2964.0, 2238.0], [3060.0, 7.0], [3020.0, 510.0], [3036.0, 288.66666666666663], [3068.0, 2521.3333333333335], [2996.0, 3245.0], [2980.0, 3046.0], [3084.0, 78.0], [3092.0, 13.0], [3108.0, 416.0], [3116.0, 1865.0], [3140.0, 1574.5714285714284], [3172.0, 10.333333333333334], [3180.0, 424.0], [3188.0, 2574.0], [3132.0, 3240.5], [3124.0, 2661.6], [3228.0, 1565.25], [3220.0, 697.6], [3212.0, 3360.0], [3300.0, 11.0], [3308.0, 2033.1428571428573], [3316.0, 214.0], [3324.0, 11.0], [3236.0, 419.0], [3244.0, 112.5], [3260.0, 10.0], [3252.0, 3345.2], [3284.0, 54.4], [3276.0, 3302.4], [3348.0, 501.0], [3340.0, 149.0], [3332.0, 566.8333333333334], [3388.0, 218.0], [3380.0, 1669.0], [3356.0, 75.66666666666666], [3428.0, 2098.5], [3436.0, 415.24999999999994], [3444.0, 140.25], [3396.0, 422.0], [3420.0, 835.0], [3404.0, 3324.0], [3364.0, 141.45454545454547], [3372.0, 592.125], [3460.0, 11.666666666666666], [3476.0, 8.0], [3484.0, 2241.6666666666665], [3564.0, 1629.0], [3572.0, 3035.0], [3548.0, 1259.0], [3556.0, 3254.0], [3612.0, 239.88888888888889], [3628.0, 1515.0], [3596.0, 1033.0], [3604.0, 2971.5], [3620.0, 1165.3636363636363], [3660.0, 1109.6666666666667], [3692.0, 212.33333333333334], [3700.0, 517.5], [3668.0, 1631.5], [3676.0, 3247.0], [3636.0, 443.8181818181818], [3644.0, 2483.5], [3588.0, 3259.0], [3820.0, 354.4], [3724.0, 3037.0], [3828.0, 13.6], [3788.0, 3354.3333333333335], [3780.0, 3298.75], [3756.0, 636.75], [3764.0, 287.33333333333337], [3772.0, 821.4], [3796.0, 217.0], [3852.0, 281.0], [3844.0, 3398.0], [3868.0, 729.2], [3860.0, 3316.0], [3884.0, 320.5], [3892.0, 303.2], [3916.0, 280.2592592592593], [3908.0, 735.7142857142856], [2157.0, 52.0], [2149.0, 3040.0], [2133.0, 3063.5], [2109.0, 3046.0], [2101.0, 3046.6666666666665], [2093.0, 3887.0], [2077.0, 7389.333333333333], [2205.0, 1510.0], [2197.0, 860.0], [2245.0, 560.3333333333333], [2253.0, 3230.25], [2293.0, 4788.0], [2285.0, 3246.2], [2269.0, 4606.0], [2229.0, 3371.5], [2221.0, 3251.25], [2213.0, 3076.0], [2405.0, 11.5], [2349.0, 248.0], [2341.0, 3036.3333333333335], [2357.0, 2500.75], [2365.0, 2078.5], [2421.0, 517.0], [2413.0, 3250.3333333333335], [2373.0, 1681.6666666666665], [2389.0, 14.0], [2381.0, 3269.0], [2397.0, 2269.2], [2437.0, 11.0], [2445.0, 1525.5], [2549.0, 3534.75], [2533.0, 4711.0], [2493.0, 3037.0], [2485.0, 3051.3333333333335], [2469.0, 3040.6666666666665], [2589.0, 421.0], [2597.0, 698.0], [2621.0, 12.0], [2629.0, 12.75], [2637.0, 2640.25], [2645.0, 2672.25], [2573.0, 3046.6666666666665], [2565.0, 3045.0], [2765.0, 42.0], [2781.0, 1439.8], [2813.0, 1602.6666666666667], [2741.0, 2928.3333333333335], [2733.0, 3582.5], [2701.0, 3895.5], [2917.0, 2851.1428571428573], [2933.0, 317.5], [2941.0, 334.5], [2925.0, 1455.7777777777778], [2861.0, 541.9999999999999], [2853.0, 2506.0], [2869.0, 167.66666666666669], [2845.0, 3057.0], [2829.0, 3265.0], [2901.0, 257.6], [2909.0, 130.14285714285714], [2949.0, 250.0], [2989.0, 11.0], [3061.0, 217.0], [3053.0, 2320.5], [3021.0, 2545.5], [3045.0, 3257.5], [3037.0, 2881.0], [3013.0, 3864.75], [2973.0, 3054.5], [3085.0, 1261.375], [3093.0, 1278.7142857142858], [3173.0, 2827.0], [3101.0, 3231.3333333333335], [3109.0, 12.0], [3117.0, 12.0], [3125.0, 12.0], [3181.0, 12.0], [3197.0, 13.0], [3189.0, 1739.0], [3165.0, 2267.833333333333], [3229.0, 152.0], [3245.0, 216.0], [3213.0, 149.33333333333331], [3237.0, 841.0], [3301.0, 11.0], [3309.0, 3254.0], [3277.0, 1535.5], [3285.0, 1454.2], [3293.0, 1234.5], [3253.0, 839.0], [3261.0, 678.0], [3453.0, 823.6], [3349.0, 13.0], [3341.0, 660.6666666666666], [3389.0, 3455.5], [3381.0, 3228.0], [3357.0, 1210.5555555555557], [3397.0, 61.50000000000001], [3445.0, 70.42857142857143], [3437.0, 1204.6666666666667], [3405.0, 11.0], [3421.0, 282.0], [3413.0, 1453.6666666666667], [3365.0, 633.7142857142857], [3373.0, 342.7647058823529], [3573.0, 3035.0], [3581.0, 1735.0], [3493.0, 1374.6], [3509.0, 1465.0], [3517.0, 1393.0], [3469.0, 3260.0], [3485.0, 3063.0], [3477.0, 3254.0], [3549.0, 1743.0], [3541.0, 1244.5], [3533.0, 3243.5], [3525.0, 1669.0], [3685.0, 146.66666666666666], [3589.0, 434.0], [3605.0, 3266.0], [3613.0, 1101.8333333333333], [3693.0, 708.4545454545454], [3709.0, 912.6], [3701.0, 513.7142857142857], [3653.0, 3065.0], [3677.0, 3249.0], [3621.0, 80.0], [3629.0, 8.0], [3637.0, 629.0], [3645.0, 1226.0], [3821.0, 11.0], [3717.0, 12.0], [3733.0, 1563.2], [3749.0, 1098.0], [3765.0, 11.857142857142858], [3797.0, 798.5714285714287], [3805.0, 213.5], [3837.0, 3055.3333333333335], [3829.0, 1235.5], [3853.0, 1555.0], [3861.0, 417.0], [3885.0, 11.4], [3893.0, 566.1], [3901.0, 169.2777777777778], [3909.0, 311.6190476190476], [3917.0, 455.17272727272723], [1055.0, 153.0], [1031.0, 14.0], [1051.0, 5160.666666666667], [1083.0, 15.0], [1087.0, 15678.0], [1063.0, 15602.666666666666], [1059.0, 15497.0], [1039.0, 15445.666666666666], [1027.0, 16156.75], [1103.0, 15760.0], [1151.0, 13.0], [1143.0, 9305.2], [1131.0, 15490.75], [1127.0, 15508.5], [1123.0, 15512.5], [1119.0, 16148.0], [1107.0, 15695.0], [1099.0, 15811.0], [1091.0, 15570.0], [1207.0, 9398.0], [1167.0, 14.666666666666666], [1163.0, 15863.0], [1159.0, 15602.75], [1155.0, 6240.8], [1179.0, 13.0], [1183.0, 15372.333333333334], [1187.0, 14.0], [1211.0, 15484.0], [1203.0, 14049.0], [1199.0, 14057.6], [1191.0, 15164.2], [1275.0, 150.33333333333334], [1271.0, 10331.333333333334], [1223.0, 3936.125], [1231.0, 15523.4], [1267.0, 6292.6], [1279.0, 223.0], [1255.0, 419.0], [1263.0, 15508.0], [1251.0, 15790.75], [1247.0, 15816.75], [1243.0, 15786.5], [1335.0, 10436.166666666668], [1295.0, 15.0], [1331.0, 15534.5], [1283.0, 82.66666666666666], [1311.0, 16.5], [1339.0, 15.0], [1343.0, 222.0], [1319.0, 14.0], [1315.0, 13834.0], [1327.0, 11729.25], [1395.0, 429.0], [1379.0, 14.666666666666666], [1363.0, 12.5], [1375.0, 343.0], [1407.0, 13482.8], [1399.0, 13389.0], [1387.0, 13652.25], [1383.0, 13877.5], [1355.0, 13485.0], [1347.0, 15377.0], [1411.0, 286.5], [1419.0, 216.0], [1471.0, 6703.5], [1467.0, 13282.0], [1463.0, 13423.0], [1459.0, 13369.666666666666], [1439.0, 13280.5], [1415.0, 13501.4], [1483.0, 183.66666666666669], [1503.0, 14.0], [1475.0, 359.0], [1479.0, 13278.666666666666], [1499.0, 494.49999999999994], [1495.0, 84.0], [1487.0, 299.4], [1527.0, 8877.0], [1523.0, 8886.0], [1511.0, 4548.333333333333], [1507.0, 9923.0], [1519.0, 8887.0], [1515.0, 8916.0], [1535.0, 8981.333333333334], [1491.0, 586.2], [1587.0, 219.0], [1543.0, 15.5], [1551.0, 3008.2857142857147], [1555.0, 79.0], [1575.0, 216.33333333333331], [1591.0, 7284.666666666667], [1583.0, 7373.0], [1547.0, 7173.0], [1627.0, 417.0], [1651.0, 692.6666666666666], [1635.0, 129.0], [1639.0, 3230.2], [1623.0, 418.0], [1619.0, 8073.8], [1611.0, 7548.0], [1723.0, 190.14285714285714], [1671.0, 3766.25], [1727.0, 3837.666666666667], [1703.0, 2014.888888888889], [1711.0, 3893.0], [1687.0, 221.0], [1715.0, 7519.0], [1695.0, 7158.0], [1667.0, 7375.0], [1675.0, 7400.75], [1743.0, 216.33333333333334], [1739.0, 214.71428571428572], [1735.0, 7561.0], [1755.0, 318.66666666666663], [1751.0, 490.33333333333337], [1779.0, 3680.75], [1787.0, 6125.666666666667], [1791.0, 844.6666666666666], [1771.0, 4469.2], [1763.0, 7147.0], [1851.0, 3336.5], [1799.0, 3803.6666666666665], [1839.0, 15.0], [1835.0, 222.5], [1855.0, 425.4], [1843.0, 421.0], [1807.0, 7667.0], [1803.0, 7691.0], [1827.0, 7566.25], [1823.0, 7566.0], [1819.0, 7656.5], [1887.0, 232.22222222222223], [1863.0, 1868.25], [1879.0, 386.6], [1875.0, 3367.714285714286], [1883.0, 197.66666666666666], [1867.0, 166.75], [1871.0, 3405.0], [1907.0, 6671.0], [1915.0, 221.66666666666666], [1919.0, 11.0], [1895.0, 219.83333333333331], [1903.0, 147.33333333333334], [1899.0, 7116.25], [1891.0, 2858.2], [1859.0, 216.25], [1971.0, 4167.5], [1923.0, 1441.0], [1943.0, 79.0], [1939.0, 6695.2], [1951.0, 7278.5], [1947.0, 7364.333333333333], [1927.0, 873.0], [1967.0, 13.0], [1931.0, 13.0], [1975.0, 7289.25], [1963.0, 6516.0], [1955.0, 6779.666666666667], [1991.0, 17.0], [1999.0, 217.5], [2035.0, 6596.0], [2015.0, 13.0], [2007.0, 3747.75], [1987.0, 16.666666666666668], [2031.0, 1699.2307692307693], [2023.0, 12.0], [2019.0, 151.66666666666669], [2047.0, 6630.0], [2003.0, 3124.2], [2142.0, 2444.4], [2166.0, 6601.666666666667], [2118.0, 6621.666666666667], [2086.0, 3035.5], [2078.0, 3037.0], [2070.0, 6517.0], [2054.0, 6778.8], [2198.0, 3499.0], [2246.0, 1711.25], [2254.0, 15.0], [2238.0, 1388.4], [2278.0, 3255.25], [2262.0, 6604.666666666667], [2230.0, 3334.0], [2190.0, 3494.5], [2182.0, 3515.6666666666665], [2406.0, 13.0], [2350.0, 464.0], [2358.0, 1744.5], [2390.0, 2480.1666666666665], [2422.0, 1468.4], [2430.0, 10.0], [2334.0, 3048.0], [2446.0, 769.5], [2558.0, 3238.8], [2534.0, 3053.0], [2510.0, 3047.6], [2502.0, 3185.4], [2494.0, 3061.0], [2478.0, 3877.5], [2574.0, 46.0], [2582.0, 1367.0], [2598.0, 169.0], [2638.0, 625.0], [2654.0, 323.25], [2590.0, 3038.0], [2766.0, 42.0], [2790.0, 2079.75], [2814.0, 10.0], [2798.0, 3055.0], [2758.0, 3255.25], [2726.0, 3307.0], [2694.0, 3039.0], [2926.0, 77.66666666666666], [2854.0, 219.33333333333334], [2862.0, 11.0], [2918.0, 758.6], [2838.0, 3045.3333333333335], [2822.0, 3171.0], [2942.0, 94.45454545454547], [2934.0, 3058.0], [2886.0, 1264.5], [2894.0, 10.0], [2902.0, 890.375], [2910.0, 723.6470588235294], [3046.0, 1093.0], [2958.0, 1789.4444444444443], [3054.0, 12.2], [2990.0, 2287.0], [3022.0, 12.0], [3062.0, 2807.0], [3030.0, 3208.6666666666665], [2982.0, 3051.0], [2950.0, 3040.5], [3086.0, 501.00000000000006], [3078.0, 1869.857142857143], [3126.0, 10.666666666666666], [3134.0, 1359.6666666666667], [3094.0, 115.0], [3102.0, 146.66666666666666], [3174.0, 10.5], [3182.0, 1527.4], [3158.0, 1501.7142857142858], [3198.0, 3245.5], [3150.0, 2378.6666666666665], [3166.0, 923.1428571428571], [3118.0, 79.66666666666666], [3222.0, 11.5], [3246.0, 853.5], [3206.0, 836.0], [3262.0, 117.25], [3238.0, 1230.6666666666665], [3230.0, 148.33333333333334], [3302.0, 1904.3333333333333], [3318.0, 1283.5], [3278.0, 885.3333333333333], [3326.0, 3410.6666666666665], [3270.0, 2809.0], [3294.0, 10.5], [3254.0, 278.2857142857143], [3350.0, 441.5], [3374.0, 1101.0], [3342.0, 80.5], [3390.0, 169.75], [3358.0, 319.75], [3438.0, 794.3333333333334], [3398.0, 12.0], [3446.0, 3261.3333333333335], [3406.0, 430.5], [3366.0, 114.25], [3462.0, 80.33333333333334], [3502.0, 1562.0], [3470.0, 421.0], [3558.0, 1736.75], [3582.0, 3252.0], [3566.0, 951.0], [3494.0, 12.0], [3550.0, 3041.0], [3518.0, 11.25], [3614.0, 10.0], [3598.0, 688.6666666666667], [3590.0, 1474.4], [3606.0, 11.0], [3662.0, 1678.5], [3670.0, 3252.5], [3710.0, 842.4285714285714], [3702.0, 245.99999999999997], [3686.0, 166.0], [3694.0, 252.83333333333331], [3622.0, 1123.6666666666667], [3630.0, 796.6666666666667], [3638.0, 3323.5], [3646.0, 629.5], [3774.0, 14.0], [3742.0, 1840.4], [3750.0, 275.0], [3758.0, 600.25], [3766.0, 16.0], [3718.0, 3053.6666666666665], [3726.0, 3367.0], [3782.0, 1332.0], [3814.0, 1741.6666666666665], [3822.0, 1676.5], [3806.0, 315.5], [3854.0, 160.25], [3846.0, 3313.0], [3862.0, 64.0], [3878.0, 924.8888888888889], [3886.0, 617.0], [3894.0, 51.8], [3902.0, 383.8], [3910.0, 357.2941176470588], [3918.0, 247.2809917355373], [2159.0, 3169.25], [2151.0, 3042.5], [2111.0, 6624.0], [2095.0, 3903.5], [2071.0, 3050.0], [2287.0, 3240.0], [2247.0, 215.33333333333334], [2239.0, 328.1875], [2255.0, 221.0], [2215.0, 15.5], [2303.0, 4373.0], [2207.0, 3342.0], [2199.0, 3357.0], [2271.0, 3289.5], [2263.0, 6638.0], [2223.0, 3436.5], [2407.0, 11.666666666666666], [2359.0, 1643.5], [2343.0, 252.0], [2351.0, 3257.6666666666665], [2367.0, 1353.0], [2319.0, 3248.0], [2311.0, 3038.0], [2375.0, 1686.0], [2391.0, 903.6666666666666], [2431.0, 11.0], [2415.0, 3258.5], [2471.0, 1442.0], [2527.0, 3368.0], [2463.0, 3049.6666666666665], [2455.0, 3053.0], [2439.0, 3811.6666666666665], [2583.0, 282.6666666666667], [2575.0, 210.6], [2591.0, 421.0], [2639.0, 220.4], [2687.0, 3031.0], [2679.0, 3241.6666666666665], [2631.0, 3026.0], [2623.0, 3299.8], [2615.0, 3043.6666666666665], [2791.0, 46.0], [2807.0, 3311.0], [2767.0, 3257.6], [2751.0, 3407.75], [2735.0, 3254.0], [2711.0, 3253.6666666666665], [2695.0, 3615.6666666666665], [2935.0, 330.7142857142857], [2847.0, 2234.6666666666665], [2831.0, 3247.5], [2927.0, 215.0], [2919.0, 335.00000000000006], [2943.0, 1123.888888888889], [2863.0, 1839.125], [2871.0, 321.0], [2887.0, 848.0], [2895.0, 1580.7142857142858], [2911.0, 178.72727272727272], [2903.0, 10.142857142857142], [2975.0, 10.0], [2951.0, 218.5], [3007.0, 3874.0], [3015.0, 217.5], [3055.0, 12.5], [3047.0, 11.0], [3031.0, 333.5], [2991.0, 215.0], [2999.0, 1477.0], [3087.0, 80.66666666666666], [3095.0, 64.25], [3199.0, 216.0], [3119.0, 2390.25], [3143.0, 3250.6666666666665], [3127.0, 1853.3333333333333], [3111.0, 2411.75], [3311.0, 42.285714285714285], [3207.0, 1549.111111111111], [3239.0, 1651.0], [3231.0, 1298.8333333333333], [3303.0, 3254.0], [3319.0, 15.0], [3279.0, 12.5], [3271.0, 1456.0], [3327.0, 3438.0], [3223.0, 1486.142857142857], [3247.0, 720.0], [3431.0, 489.5], [3343.0, 113.5], [3383.0, 1236.8], [3359.0, 166.0], [3351.0, 2591.0], [3439.0, 98.42857142857143], [3447.0, 12.0], [3407.0, 2456.8], [3399.0, 2892.75], [3367.0, 81.5], [3375.0, 755.4166666666666], [3487.0, 149.66666666666669], [3463.0, 1167.0], [3471.0, 2245.6666666666665], [3479.0, 9.0], [3559.0, 1628.0], [3567.0, 854.0], [3575.0, 1635.75], [3527.0, 13.0], [3543.0, 14.5], [3495.0, 13.333333333333334], [3511.0, 1292.1666666666667], [3615.0, 1924.5], [3591.0, 1377.3333333333335], [3647.0, 1225.0], [3599.0, 2015.75], [3655.0, 12.666666666666666], [3711.0, 1227.0], [3687.0, 1212.8], [3695.0, 272.73333333333335], [3703.0, 1089.0], [3663.0, 424.5], [3671.0, 1634.5], [3679.0, 2365.0], [3607.0, 1029.6], [3631.0, 398.625], [3623.0, 3359.0], [3727.0, 16.0], [3719.0, 12.25], [3735.0, 150.42857142857142], [3767.0, 422.8333333333333], [3775.0, 12.0], [3839.0, 3446.0], [3791.0, 2800.3333333333335], [3783.0, 209.0], [3855.0, 218.0], [3847.0, 119.0], [3903.0, 148.66666666666666], [3895.0, 115.0], [3863.0, 1815.3333333333335], [3871.0, 2767.75], [3919.0, 285.74757281553394], [3911.0, 38.08333333333334], [3879.0, 252.5], [3887.0, 1189.7142857142856]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2308.1902552204224, 4270.290023201861]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3922.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2234.633333333333, "minX": 1.60925364E12, "maxY": 161591.68333333332, "series": [{"data": [[1.6092537E12, 21184.716666666667], [1.60925364E12, 161591.68333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6092537E12, 2234.633333333333], [1.60925364E12, 17045.433333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6092537E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1723.5038768937154, "minX": 1.60925364E12, "maxY": 23696.776160145586, "series": [{"data": [[1.6092537E12, 23696.776160145586], [1.60925364E12, 1723.5038768937154]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6092537E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1723.4991053322171, "minX": 1.60925364E12, "maxY": 23696.77434030939, "series": [{"data": [[1.6092537E12, 23696.77434030939], [1.60925364E12, 1723.4991053322171]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6092537E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 984.7898127162123, "minX": 1.60925364E12, "maxY": 15300.970882620562, "series": [{"data": [[1.6092537E12, 15300.970882620562], [1.60925364E12, 984.7898127162123]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6092537E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.60925364E12, "maxY": 70911.0, "series": [{"data": [[1.6092537E12, 70911.0], [1.60925364E12, 15824.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6092537E12, 34791.0], [1.60925364E12, 6534.800000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6092537E12, 70844.0], [1.60925364E12, 15384.16]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6092537E12, 52561.0], [1.60925364E12, 7559.799999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6092537E12, 14040.0], [1.60925364E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6092537E12, 17224.0], [1.60925364E12, 219.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6092537E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 14.0, "minX": 1.0, "maxY": 53565.5, "series": [{"data": [[533.0, 3245.0], [34.0, 31527.0], [38.0, 30809.0], [43.0, 17190.0], [48.0, 13326.0], [3.0, 27437.0], [867.0, 3237.0], [57.0, 22257.0], [1000.0, 219.0], [62.0, 18760.0], [64.0, 18.0], [67.0, 31738.0], [1129.0, 15.0], [73.0, 13477.0], [72.0, 26427.0], [1218.0, 16.0], [1340.0, 59.5], [1338.0, 14.0], [5.0, 44666.5], [6.0, 22232.5], [112.0, 15487.5], [123.0, 6926.0], [132.0, 7673.5], [137.0, 6571.0], [189.0, 15907.0], [13.0, 34629.0], [14.0, 42796.5], [247.0, 7437.0], [1.0, 9923.0], [17.0, 42812.0], [18.0, 34801.0], [19.0, 53565.5], [320.0, 15613.5], [21.0, 10677.0], [22.0, 26378.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1340.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 14.0, "minX": 1.0, "maxY": 53565.5, "series": [{"data": [[533.0, 3245.0], [34.0, 31527.0], [38.0, 30809.0], [43.0, 17190.0], [48.0, 13326.0], [3.0, 27437.0], [867.0, 3237.0], [57.0, 22257.0], [1000.0, 219.0], [62.0, 18760.0], [64.0, 18.0], [67.0, 31738.0], [1129.0, 15.0], [73.0, 13477.0], [72.0, 26427.0], [1218.0, 16.0], [1340.0, 59.5], [1338.0, 14.0], [5.0, 44666.5], [6.0, 22232.5], [112.0, 15487.5], [123.0, 6926.0], [132.0, 7673.5], [137.0, 6571.0], [189.0, 15907.0], [13.0, 34629.0], [14.0, 42796.5], [247.0, 7437.0], [1.0, 9923.0], [17.0, 42812.0], [18.0, 34801.0], [19.0, 53565.5], [320.0, 15613.5], [21.0, 10677.0], [22.0, 26378.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1340.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 158.03333333333333, "minX": 1.60925364E12, "maxY": 158.03333333333333, "series": [{"data": [[1.60925364E12, 158.03333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60925364E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 18.316666666666666, "minX": 1.60925364E12, "maxY": 139.71666666666667, "series": [{"data": [[1.6092537E12, 18.316666666666666], [1.60925364E12, 139.71666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6092537E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 18.316666666666666, "minX": 1.60925364E12, "maxY": 139.71666666666667, "series": [{"data": [[1.6092537E12, 18.316666666666666], [1.60925364E12, 139.71666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6092537E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 18.316666666666666, "minX": 1.60925364E12, "maxY": 139.71666666666667, "series": [{"data": [[1.6092537E12, 18.316666666666666], [1.60925364E12, 139.71666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6092537E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

